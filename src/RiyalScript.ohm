RiyalScript {
  Program = Statement+

  Statement = FuncDecl | VarDecl | AssignStmt

  FuncDecl = "func" id "[" Params "]" "(" ExpBlock ")" "end"
  Params = ListOf<id, ",">

  ExpBlock = NonemptyListOf<TopExpr, ";">
  TopExpr = IfExpr | Expression

  VarDecl = "let" id "=" Expression
  AssignStmt = id "=" Expression

  Expression = IfExpr | AddExpr

  IfExpr = "if" Expression Expression "else" Expression

  AddExpr = AddChain | MulExpr
  AddChain = AddExpr ("+" | "-") MulExpr

  MulExpr = MulChain | UnaryExpr
  MulChain = MulExpr ("*" | "/" | "%") UnaryExpr

  UnaryExpr = Negate | PostfixExpr
  Negate = "-" PrimaryExpr

  PostfixExpr = PostfixChain | PrimaryExpr
  PostfixChain = PostfixExpr "!"

  PrimaryExpr =
      IfExpr
    | num
    | str
    | Call
    | id
    | Grouped

  Grouped = "(" Expression ")"

  Call = id "[" Args "]"
  Args = ListOf<Expression, ",">

  id = ~keyword (letter | "@" | "_") idchar*
  idchar = alnum | "_" | "@" | "$"

  num = digit+ ("." digit+)? (("E" | "e") ("+" | "-")? digit+)?

  str = "\"" strchar* "\""
  strchar = directChar | escapeChar
  directChar = ~("\\" | "\"") any
  escapeChar = "\\" escape

  escape = "\"" | "'" | "\\" | "n" | unicodeEscape
  unicodeEscape = "u" "{" hexes "}"
  hexes = hex+
  hex = digit | "a".."f" | "A".."F"

  keyword = "func" | "if" | "else" | "end" | "let"

  comment = "\\\\" (~"\n" any)*
  space += " " | "\t" | "\n" | comment
}
